<?php

namespace App\Http\Controllers;

use App\Models\Candidature;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;  // Ajouter le facade Auth

class CandidatureController extends Controller
{
    // ğŸ”µ Voir toutes les candidatures (optionnel)
    public function index()
    {
        return response()->json(Candidature::with(['offre', 'cv'])->get());
    }

    // ğŸ”µ Voir une seule candidature
    public function show($id)
    {
        $candidature = Candidature::with(['offre', 'cv'])->find($id);

        if (!$candidature) {
            return response()->json(['message' => 'Candidature non trouvÃ©e'], 404);
        }

        return response()->json($candidature);
    }

    // ğŸ”µ Voir les candidatures de l'utilisateur authentifiÃ©
    public function mescandidatures()
    {
        // RÃ©cupÃ©rer l'utilisateur authentifiÃ©
        $user = Auth::user();  // Utilisation correcte de Auth::user()
    
        if (!$user) {
            return response()->json(['message' => 'Utilisateur non authentifiÃ©'], 401);
        }

        // Filtrer les candidatures associÃ©es Ã  l'utilisateur connectÃ©
        $candidatures = Candidature::where('user_id', $user->id)
                                   ->with(['offre'])  // Charger l'offre associÃ©e
                                   ->get();
    
        // Retourner les candidatures sous forme de rÃ©ponse JSON
        return response()->json($candidatures);
    }
    
    // ğŸ”µ Postuler Ã  une offre (via API POST)
    // 
// public function store($id,Request $request)
//  {  
   
//     // VÃ©rifier si l'utilisateur est authentifiÃ©
// //     $user = Auth::user(); 
// //     if (!$user) {
// //         return response()->json(['message' => 'Utilisateur non authentifiÃ©'], 401);
// //     }
// //     // Valider les donnÃ©es
// //     $validatedData = $request->validate([
// //         'offre_id' => 'required|exists:offres,id',
// //         'cv_id' => 'required|exists:cvs,id',
// //         'message' => 'nullable|string|max:1000',
// //         'statut' => 'nullable|string|max:1000',
// //     ]);
// //     // CrÃ©er la candidature
// //     $candidature = new Candidature();
// //     $candidature->offre_id = $validatedData['offre_id'];
// //     $candidature->cv_id = $validatedData['cv_id'];
// //     $candidature->message = $validatedData['message'];
// //     $candidature->statut = $validatedData['statut'];
// //     $candidature->user_id = $user->id; // Associer l'utilisateur authentifiÃ© Ã  la candidature
// //     $candidature->save();

// //     return response()->json($candidature, 201); // Retourner la candidature aprÃ¨s l'enregistrement
// }


    // ğŸ”µ Supprimer une candidature
    public function destroy($id)
    {
        $candidature = Candidature::find($id);

        if (!$candidature) {
            return response()->json(['message' => 'Candidature non trouvÃ©e'], 404);
        }

        $candidature->delete();

        return response()->json(['message' => 'Candidature supprimÃ©e avec succÃ¨s']);
    }
}
